{"base_template":null,"template":{"name":"Dashboard Demo","template_css":"","template_md":"<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons\" rel=\"stylesheet\"\r\n        type=\"text/css\">\r\n    <link href=\"https://cdn.jsdelivr.net/npm/quasar@2.12.4/dist/quasar.prod.css\" rel=\"stylesheet\" type=\"text/css\">\r\n\r\n    {{css}}\r\n</head>\r\n\r\n<body>\r\n    <div id=\"q-app\">\r\n        {% raw %}\r\n        <q-layout view=\"hHh lpR fFf\">\r\n\r\n            <q-header elevated class=\"bg-primary text-white\" height-hint=\"98\">\r\n                <q-toolbar dense>\r\n                    <q-toolbar-title>\r\n                        TRMM Agent Dashboard\r\n                    </q-toolbar-title>\r\n                </q-toolbar>\r\n\r\n                <q-tabs align=\"left\" v-model=\"selectedTab\">\r\n                    <q-tab name=\"trmm\" label=\"TRMM\"></q-tab>\r\n                    <q-tab name=\"agentsum\" label=\"Agent Summary\"></q-tab>\r\n                    <q-tab name=\"agentdet\" label=\"Agent Detail\"></q-tab>\r\n                </q-tabs>\r\n            </q-header>\r\n\r\n            <q-page-container>\r\n                <div v-if=\"selectedTab === 'agentdet'\">\r\n                    <q-toolbar>\r\n                        <q-select v-model=\"selectedClient\" :options=\"clientOptions\" label=\"Clients\" outlined\r\n                            style=\"width: 250px\" dense class=\"q-pr-sm\"></q-select>\r\n                        <q-select v-model=\"selectedSite\" :options=\"siteOptions\" label=\"Sites\" outlined\r\n                            style=\"width: 250px\" dense class=\"q-pr-sm\"></q-select>\r\n                        <q-select v-model=\"selectedAgent\" :options=\"agentOptions\" label=\"Agents\" outlined\r\n                            style=\"width: 250px\" dense></q-select>\r\n                    </q-toolbar>\r\n                    <div v-if=\"!agentDetail || Object.keys(agentDetail) === 0\">\r\n                        Select an Agent\r\n                    </div>\r\n                    <div v-else>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"row items-start q-gutter-sm\">\r\n                                    <!-- Agent status card -->\r\n                                    <q-card class=\"bg-red-6\" bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">Disconnected</div>\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n\r\n                                    <!--- Agent Uptime -->\r\n                                    <q-card bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">Uptime: {{ getTimeLapse(agentDetail.boot_time) }}</div>\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n\r\n\r\n                                    <!-- Needs Reboot-->\r\n                                    <q-card bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">\r\n                                                {{ agentDetail.needs_reboot ? \"Agent Needs Reboot\" : \"No Reboot Required\" }}\r\n                                            </div>\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n\r\n                                    <!-- Agent Ram -->\r\n                                    <q-card bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">Total RAM: {{ agentDetail.total_ram }}GB</div>\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n\r\n                                    <q-card bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">Operating System</div>\r\n                                        </q-card-section>\r\n\r\n                                        <q-separator inset></q-separator>\r\n\r\n                                        <q-card-section>\r\n                                            {{ agentDetail.operating_system }}\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n\r\n                                    <q-card bordered>\r\n                                        <q-card-section>\r\n                                            <div class=\"text-h6\">Disks</div>\r\n                                        </q-card-section>\r\n                                        <q-separator></q-separator>\r\n                                        <q-card-section v-for=\"disk in agentDetail.disks\" :key=\"disk.device\">\r\n                                            <span>{{ disk.device }} ({{ disk.fstype }})</span>\r\n                                            <q-linear-progress rounded size=\"15px\" :value=\"disk.percent / 100\"\r\n                                                :color=\"diskBarColor(disk.percent)\" class=\"q-mt-sm\"></q-linear-progress>\r\n                                            <span>{{ disk.free }} free of {{ disk.total }}</span>\r\n                                        </q-card-section>\r\n                                    </q-card>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\"> column 2</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </q-page-container>\r\n\r\n        </q-layout>\r\n        {% endraw %}\r\n    </div>\r\n\r\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.prod.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/quasar@2.12.4/dist/quasar.umd.prod.js\"></script>\r\n\r\n    <script>\r\n        const app = Vue.createApp({\r\n        setup () {\r\n\r\n            // dropdown data\r\n            const agents = {{ data_sources.agents }}\r\n            const clients = {{ data_sources.clients }}\r\n            const sites = {{ data_sources.sites }}\r\n\r\n            // drop down filters\r\n            const clientOptions = clients.map(client => ({label: client.name, value: client.id}))\r\n\r\n            const siteOptions = Vue.computed(() => {\r\n                if (!selectedClient.value) return []\r\n                else return sites.filter(site => site.client_id === selectedClient.value.value).map(site => ({value: site.id, label: site.name}))\r\n            })\r\n\r\n            const agentOptions = Vue.computed(() => {\r\n                if (!selectedClient.value || !selectedSite.value) return []\r\n                else return agents.filter(agent => agent.site_id === selectedSite.value.value).map(agent => ({value: agent.agent_id, label: agent.hostname}))\r\n            })\r\n\r\n            // dropdown selected variables\r\n            const selectedAgent = Vue.ref(null)\r\n            const selectedSite = Vue.ref(null)\r\n            const selectedClient = Vue.ref(null)\r\n\r\n            const agentDetail = Vue.computed(() => {\r\n                if (!selectedAgent.value) return null\r\n                else return agents.find(agent => agent.agent_id === selectedAgent.value.value)\r\n            })\r\n\r\n            // tab logic\r\n            const selectedTab = Vue.ref(\"trmm\")\r\n\r\n\r\n            function getTimeLapse(unixtime) {\r\n                var previous = unixtime * 1000;\r\n                var current = new Date();\r\n                var msPerMinute = 60 * 1000;\r\n                var msPerHour = msPerMinute * 60;\r\n                var msPerDay = msPerHour * 24;\r\n                var msPerMonth = msPerDay * 30;\r\n                var msPerYear = msPerDay * 365;\r\n                var elapsed = current - previous;\r\n                if (elapsed < msPerMinute) {\r\n                    return Math.round(elapsed / 1000) + \" seconds\";\r\n                } else if (elapsed < msPerHour) {\r\n                    return Math.round(elapsed / msPerMinute) + \" minutes\";\r\n                } else if (elapsed < msPerDay) {\r\n                    return Math.round(elapsed / msPerHour) + \" hours\";\r\n                } else if (elapsed < msPerMonth) {\r\n                    return Math.round(elapsed / msPerDay) + \" days\";\r\n                } else if (elapsed < msPerYear) {\r\n                    return Math.round(elapsed / msPerMonth) + \" months\";\r\n                } else {\r\n                    return Math.round(elapsed / msPerYear) + \" years\";\r\n                }\r\n            } \r\n\r\n            function diskBarColor(percent) {\r\n                if (percent < 80) {\r\n                    return \"positive\"\r\n                } else if (percent > 80 && percent < 95) {\r\n                    return \"warning\"\r\n                } else {\r\n                    return \"negative\"\r\n                }\r\n            } \r\n\r\n            Vue.watch(siteOptions, () => {\r\n                if (siteOptions) selectedSite.value = siteOptions.value[0]\r\n            })\r\n\r\n            Vue.watch(agentOptions, () => {\r\n                if (agentOptions) selectedAgent.value = agentOptions.value[0]\r\n            })\r\n\r\n            Vue.onMounted(() => {\r\n                selectedTab.value = \"agentdet\"\r\n            })\r\n\r\n            Vue.watch(agentDetail, () => console.log(agentDetail.value))\r\n\r\n            return {\r\n                selectedTab,\r\n                selectedAgent,\r\n                selectedSite,\r\n                selectedClient,\r\n                clientOptions,\r\n                siteOptions,\r\n                agentOptions,\r\n                agentDetail,\r\n                getTimeLapse,\r\n                diskBarColor\r\n            }\r\n        }\r\n      })\r\n\r\n      app.use(Quasar)\r\n      app.mount('#q-app')\r\n    </script>\r\n</body>\r\n\r\n</html>","type":"html","depends_on":[],"template_variables":"data_sources:\n  agents:\n    json: true\n    model: agent\n    only:\n    - hostname\n    - agent_id\n    - site_id\n    - public_ip\n    - total_ram\n    - boot_time\n    - operating_system\n    - version\n    - plat\n    - logged_in_username\n    - description\n    - monitoring_type\n    - needs_reboot\n    - check_interval\n    - overdue_time\n    - offline_time\n    - block_policy_inheritance\n    - maintenance_mode\n    - time_zone\n    - choco_installed\n    - disks\n  clients:\n    json: true\n    model: client\n    only:\n    - name\n  sites:\n    json: true\n    model: site\n    only:\n    - name\n    - client_id\n"},"assets":[]}