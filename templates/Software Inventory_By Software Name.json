{
  "base_template": null,
  "template": {
    "name": "Software Report By Software Name",
    "template_css": "",
    "template_md": "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons\" rel=\"stylesheet\"\r\n    type=\"text/css\">\r\n  <link href=\"https://cdn.jsdelivr.net/npm/quasar@2.13.1/dist/quasar.prod.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n\r\n<body>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.prod.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/quasar@2.13.1/dist/quasar.umd.prod.js\"></script>\r\n\r\n  <div id=\"q-app\">\r\n    <div id=\"loading\" class=\"position-absolute top-50 start-50 translate-middle\">\r\n    </div>\r\n    {%raw%}\r\n    <q-layout view=\"hHh lpR fFf\">\r\n      <q-page-container class=\"q-ma-sm\">\r\n        <div id=\"container\" style=\"display: none\">\r\n          <div class=\"row justify-center q-my-md\">\r\n            COMPANY LOGO HERE\r\n          </div>\r\n          <div class=\"row justify-center q-mb-lg\">\r\n            <q-form @submit=\"findSoftware()\" class=\"q-gutter-md\">\r\n              <div style=\"width: 300px\">\r\n                <q-input debounce=\"300\" v-model=\"softwareSearchText\" placeholder=\"Search for a software name...\"\r\n                  clearable clear-icon=\"close\" />\r\n              </div>\r\n              <div class=\"float-right\">\r\n                <q-btn-dropdown split color=\"white\" text-color=\"black\" label=\"Search\" @click=\"findSoftware()\">\r\n                  <q-list>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('ArcGIS Desktop')\">\r\n                      <q-item-section>\r\n                        <q-item-label>ArcGIS Desktop</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('ArcGIS Pro')\">\r\n                      <q-item-section>\r\n                        <q-item-label>ArcGIS Pro</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('Autodesk Civil 3D 2020 - English')\">\r\n                      <q-item-section>\r\n                        <q-item-label>Civil 3D 2020</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('Autodesk Civil 3D 2023 - English')\">\r\n                      <q-item-section>\r\n                        <q-item-label>Civil 3D 2023</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('Civil 3D 2023.3.1')\">\r\n                      <q-item-section>\r\n                        <q-item-label>Civil 3D 2023.3.1</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                    <q-item clickable v-close-popup @click=\"quickFindSoftware('SMS')\">\r\n                      <q-item-section>\r\n                        <q-item-label>SMS</q-item-label>\r\n                      </q-item-section>\r\n                    </q-item>\r\n                  </q-list>\r\n                </q-btn-dropdown>\r\n              </div>\r\n            </q-form>\r\n          </div>\r\n          <q-table title=\"Software\" :rows=\"softwareTableRows\" :columns=\"softwareTableColumns\" row-key=\"name\"\r\n            :filter=\"softwareTableFilter\" :pagination=\"softwareTablePagination\">\r\n            <template v-slot:top-right>\r\n              <div style=\"width: 300px\">\r\n                <q-input debounce=\"300\" v-model=\"softwareTableFilter\" placeholder=\"Filter the table below...\" clearable\r\n                  clear-icon=\"close\" />\r\n              </div>\r\n            </template>\r\n            <template v-slot:body=\"props\">\r\n              <q-tr :props=\"props\" @click=\"agentTableRowClick(props.row)\">\r\n                <q-td key=\"hostname\" :props=\"props\">\r\n                  {{ props.row.hostname }}\r\n                </q-td>\r\n                <q-td key=\"lastUser\" :props=\"props\">\r\n                  {{ props.row.lastUser }}\r\n                </q-td>\r\n                <q-td key=\"softwarePublisher\" :props=\"props\">\r\n                  {{ props.row.softwarePublisher }}\r\n                </q-td>\r\n                <q-td key=\"softwareName\" :props=\"props\">\r\n                  {{ props.row.softwareName }}\r\n                </q-td>\r\n                <q-td key=\"softwareVersion\" :props=\"props\">\r\n                  {{ props.row.softwareVersion }}\r\n                </q-td>\r\n                <q-td key=\"softwareSize\" :props=\"props\">\r\n                  {{ props.row.softwareSize }}\r\n                </q-td>\r\n                <q-td key=\"softwareInstallDate\" :props=\"props\">\r\n                  {{ props.row.softwareInstallDate }}\r\n                </q-td>\r\n              </q-tr>\r\n            </template>\r\n          </q-table>\r\n      </q-page-container>\r\n    </q-layout>\r\n    {%endraw%}\r\n  </div>\r\n\r\n  <script>\r\n    const { ref, watch } = Vue\r\n    const softwareTableColumns = [\r\n      {\r\n        name: 'hostname',\r\n        required: true,\r\n        label: 'Agent',\r\n        align: 'left',\r\n        field: row => row.hostname,\r\n        format: val => `${val}`,\r\n        sortable: true\r\n      },\r\n      { name: 'lastUser', align: 'left', label: 'User', field: 'lastUser', sortable: true },\r\n      { name: 'softwarePublisher', align: 'left', label: 'Publisher', field: 'softwarePublisher', sortable: false },\r\n      { name: 'softwareName', align: 'left', label: 'Name', field: 'softwareName', sortable: true },\r\n      { name: 'softwareVersion', align: 'left', label: 'Version', field: 'softwareVersion', sortable: true },\r\n      { name: 'softwareSize', align: 'left', label: 'Size', field: 'softwareSize', sortable: false },\r\n      { name: 'softwareInstallDate', align: 'left', label: 'Install Date', field: 'softwareInstallDate', sortable: true },\r\n    ]\r\n    let softwareTableRows = ref([])\r\n\r\n    const app = Vue.createApp({\r\n      setup () {\r\n          let tableLoading = ref(false)\r\n          let loaded = ref(false)\r\n          let agentSoftware = {{data_sources.agentsSoftware}}\r\n          let softwareSearchText = ref('')\r\n\r\n          function findSoftware(){\r\n            if (softwareSearchText.value){\r\n              softwareTableRows.value = []\r\n              for (const agent of agentSoftware){\r\n                  agent.software.filter(function (el) {\r\n                    installDate = new Date(el.install_date)\r\n                    if(el.name.toLowerCase().includes(softwareSearchText.value.toLowerCase())){\r\n                        let agentObj ={\r\n                          softwareName: el.name,\r\n                          softwareInstallDate: installDate.toLocaleString(\"en-US\", {\r\n                            timeZone: \"America/Los_Angeles\",\r\n                            month: \"short\",\r\n                            day: \"2-digit\",\r\n                            year: \"numeric\"\r\n                          }),\r\n                          softwareLocation: el.location,\r\n                          softwarePublisher: el.publisher,\r\n                          softwareSize: el.size,\r\n                          softwareVersion: el.version,\r\n                          softwareUninstall: el.uninstall,\r\n                          hostname: agent.agent__hostname,\r\n                          lastUser: agent.agent__last_logged_in_user\r\n                        }\r\n                        softwareTableRows.value.push(agentObj)\r\n                      }\r\n                  }); \r\n              }\r\n            }else{\r\n              Quasar.Notify.create({\r\n                message: \"Please fill in the search field.\",\r\n                position: \"top\",\r\n                closeBtn: true,\r\n                color: \"positive\"\r\n              })\r\n            }\r\n          }\r\n\r\n          function quickFindSoftware(searchText){\r\n            if (searchText){\r\n              softwareSearchText.value = searchText\r\n              softwareTableRows.value = []\r\n              for (const agent of agentSoftware){\r\n                  agent.software.filter(function (el) {\r\n                    installDate = new Date(el.install_date)\r\n                    if(el.name.toLowerCase().includes(searchText.toLowerCase())){\r\n                        let agentObj ={\r\n                          softwareName: el.name,\r\n                          softwareInstallDate: installDate.toLocaleString(\"en-US\", {\r\n                            timeZone: \"America/Los_Angeles\",\r\n                            month: \"short\",\r\n                            day: \"2-digit\",\r\n                            year: \"numeric\"\r\n                          }),\r\n                          softwareLocation: el.location,\r\n                          softwarePublisher: el.publisher,\r\n                          softwareSize: el.size,\r\n                          softwareVersion: el.version,\r\n                          softwareUninstall: el.uninstall,\r\n                          hostname: agent.agent__hostname,\r\n                          lastUser: agent.agent__last_logged_in_user\r\n                        }\r\n                        softwareTableRows.value.push(agentObj)\r\n                      }\r\n                  }); \r\n              }\r\n            }else{\r\n              Quasar.Notify.create({\r\n                message: \"Please fill in the search field.\",\r\n                position: \"top\",\r\n                closeBtn: true,\r\n                color: \"positive\"\r\n              })\r\n            }\r\n          }\r\n\r\n          Vue.watch(loaded, (newValue) => {\r\n            if (newValue) {\r\n              document.getElementById(\"loading\").style.display = 'none'\r\n              document.getElementById(\"container\").style.display = 'block'\r\n            }\r\n          })\r\n          loaded.value = true\r\n\r\n          return {\r\n            softwareTablePagination: {\r\n            sortBy: 'desc',\r\n            descending: false,\r\n            page: 1,\r\n            rowsPerPage: 100\r\n            },\r\n            loaded,\r\n            findSoftware,\r\n            quickFindSoftware,\r\n            softwareTableFilter: ref(''),\r\n            softwareSearchText,\r\n            softwareTableColumns,\r\n            softwareTableRows,\r\n          }\r\n        }\r\n      })\r\n      app.use(Quasar)\r\n      app.mount('#q-app')\r\n  </script>\r\n</body>\r\n\r\n</html>",
    "type": "html",
    "depends_on": [],
    "template_variables": "data_sources:\r\n  agentsSoftware: \r\n    json: true\r\n    model: installedsoftware\r\n    select_related:\r\n      - agent__hostname\r\n    only:\r\n      - software\r\n      - agent__hostname\r\n      - agent__last_logged_in_user\r\n    order_by:\r\n      - agent__hostname"
  },
  "assets": []
}